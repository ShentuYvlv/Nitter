services:
  # 共享Redis实例
  nitter-redis:
    image: redis:alpine
    container_name: nitter-redis
    command: redis-server --save 60 1 --loglevel warning --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - nitter-redis:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Nitter实例1 - 端口8080
  nitter1:
    image: zedeus/nitter:latest
    container_name: nitter1
    ports:
      - "8080:8080"
    environment:
      - ENABLE_RATELIMIT=false
      - TOR_PROXY_ENABLED=true
      - REQ_LIMIT=100000
      - REQ_PER_MIN=2000
      - ENABLE_DEBUG=false
      - HTTP_MAX_CONNECTIONS=500
      - REDIS_CONNECTIONS=50
      - REDIS_MAX_CONNECTIONS=100
      - RSS_MINUTES=5
    volumes:
      - ./nitter.conf:/src/nitter.conf:ro
      - ./sessions.jsonl:/src/sessions.jsonl:ro
      - ./cache1:/src/cache
    depends_on:
      - nitter-redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/settings"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nitter实例2 - 端口8081
  nitter2:
    image: zedeus/nitter:latest
    container_name: nitter2
    ports:
      - "8081:8080"
    environment:
      - ENABLE_RATELIMIT=false
      - TOR_PROXY_ENABLED=true
      - REQ_LIMIT=100000
      - REQ_PER_MIN=2000
      - ENABLE_DEBUG=false
      - HTTP_MAX_CONNECTIONS=500
      - REDIS_CONNECTIONS=50
      - REDIS_MAX_CONNECTIONS=100
      - RSS_MINUTES=5
    volumes:
      - ./nitter.conf:/src/nitter.conf:ro
      - ./sessions.jsonl:/src/sessions.jsonl:ro
      - ./cache2:/src/cache
    depends_on:
      - nitter-redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/settings"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nitter实例3 - 端口8082
  nitter3:
    image: zedeus/nitter:latest
    container_name: nitter3
    ports:
      - "8082:8080"
    environment:
      - ENABLE_RATELIMIT=false
      - TOR_PROXY_ENABLED=true
      - REQ_LIMIT=100000
      - REQ_PER_MIN=2000
      - ENABLE_DEBUG=false
      - HTTP_MAX_CONNECTIONS=500
      - REDIS_CONNECTIONS=50
      - REDIS_MAX_CONNECTIONS=100
      - RSS_MINUTES=5
    volumes:
      - ./nitter.conf:/src/nitter.conf:ro
      - ./sessions.jsonl:/src/sessions.jsonl:ro
      - ./cache3:/src/cache
    depends_on:
      - nitter-redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/settings"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  nitter-redis: 